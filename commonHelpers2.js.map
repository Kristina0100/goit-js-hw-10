{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst promiseForm = document.querySelector('.form');\n\nconst onFormSubmit = event => {\n    event.preventDefault();\n\n    let delay = Number(promiseForm.elements.delay.value);\n    let states = promiseForm.elements.state.value;\n\n    const showErrorMessage = delay => {\n    iziToast.show({\n        message: `Rejected promise in ${delay}ms`,\n        messageColor: '#fff',\n        messageSize: '16px',\n        messageLineHeight: '24px',\n        backgroundColor: '#EF4040',\n        iconUrl: \"/img/error.svg\",\n        closeOnClick: true,\n        position: 'topRight',\n        progressBarColor: '#B51B1B',\n  });\n};\n\n    const showResolvedMessage = delay => {\n    iziToast.show({\n        message: `Fulfilled promise in ${delay}ms`,\n        messageColor: '#fff',\n        messageSize: '16px',\n        messageLineHeight: '24px',\n        backgroundColor: '#59A10D',\n        iconUrl: \"/img/success.svg\",\n        closeOnClick: true,\n        position: 'topRight',\n        progressBarColor: '#326101',\n    });\n};\n\n    const newPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        if (states === 'fulfilled') {\n        resolve(delay);\n     } else {\n        reject(delay);\n     }\n   }, delay);\n});\n    \n    newPromise\n        .then(resolvedDelay => showResolvedMessage(resolvedDelay))\n        .catch(rejectedDelay => showErrorMessage(rejectedDelay));\n    \n    promiseForm.reset();\n};\n\npromiseForm.addEventListener('submit', onFormSubmit);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const executor = (resolve, reject) => {\n//   setTimeout(() => {\n//     const isDone = Math.random() >= 0.5;\n\n//     if (isDone) {\n//       resolve('Done!');\n//     } else {\n//       reject('Error!');\n//     }\n//   }, 1000);\n// };\n\n// const promise = new Promise(executor);\n\n\n\n// promise\n//   .finally(() => {\n//     preloader.stop();\n\n//     console.log('The End!');\n//   })\n//   .then(result => {\n//     console.log(promise);\n\n//     console.log(result);\n\n//     return 'Hello';\n//   })\n//   .then(data => {\n//     console.log(data);\n//   })\n//   .catch(err => {\n//     console.log(promise);\n\n//     console.log(err);\n//   });"],"names":["promiseForm","onFormSubmit","event","delay","states","showErrorMessage","iziToast","showResolvedMessage","resolve","reject","resolvedDelay","rejectedDelay"],"mappings":"oGAGA,MAAMA,EAAc,SAAS,cAAc,OAAO,EAE5CC,EAAeC,GAAS,CAC1BA,EAAM,eAAc,EAEpB,IAAIC,EAAQ,OAAOH,EAAY,SAAS,MAAM,KAAK,EAC/CI,EAASJ,EAAY,SAAS,MAAM,MAExC,MAAMK,EAAmBF,GAAS,CAClCG,EAAS,KAAK,CACV,QAAS,uBAAuBH,CAAK,KACrC,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,UACjB,QAAS,iBACT,aAAc,GACd,SAAU,WACV,iBAAkB,SAC1B,CAAG,CACH,EAEUI,EAAsBJ,GAAS,CACrCG,EAAS,KAAK,CACV,QAAS,wBAAwBH,CAAK,KACtC,aAAc,OACd,YAAa,OACb,kBAAmB,OACnB,gBAAiB,UACjB,QAAS,mBACT,aAAc,GACd,SAAU,WACV,iBAAkB,SAC1B,CAAK,CACL,EAEuB,IAAI,QAAQ,CAACK,EAASC,IAAW,CACpD,WAAW,IAAM,CACTL,IAAW,YACfI,EAAQL,CAAK,EAEbM,EAAON,CAAK,CAEhB,EAAEA,CAAK,CACX,CAAC,EAGQ,KAAKO,GAAiBH,EAAoBG,CAAa,CAAC,EACxD,MAAMC,GAAiBN,EAAiBM,CAAa,CAAC,EAE3DX,EAAY,MAAK,CACrB,EAEAA,EAAY,iBAAiB,SAAUC,CAAY"}